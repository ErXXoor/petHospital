<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.petHospital.mapper.RecordMapper">
  <resultMap id="BaseResultMap" type="org.petHospital.model.Record">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="time" jdbcType="DATE" property="time" />
    <result column="patient" jdbcType="VARCHAR" property="patient" />
    <result column="pet_type" jdbcType="VARCHAR" property="petType" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="REAL" property="price" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, time, patient, pet_type, description, price
  </sql>
  <select id="selectByExample" parameterType="org.petHospital.model.RecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.petHospital.model.RecordExample">
    delete from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.petHospital.model.Record">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into record (time, patient, pet_type, 
      description, price)
    values (#{time,jdbcType=DATE}, #{patient,jdbcType=VARCHAR}, #{petType,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{price,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="org.petHospital.model.Record">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="time != null">
        time,
      </if>
      <if test="patient != null">
        patient,
      </if>
      <if test="petType != null">
        pet_type,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="price != null">
        price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
      <if test="patient != null">
        #{patient,jdbcType=VARCHAR},
      </if>
      <if test="petType != null">
        #{petType,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.petHospital.model.RecordExample" resultType="java.lang.Integer">
    select count(*) from record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.patient != null">
        patient = #{record.patient,jdbcType=VARCHAR},
      </if>
      <if test="record.petType != null">
        pet_type = #{record.petType,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update record
    set id = #{record.id,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE},
      patient = #{record.patient,jdbcType=VARCHAR},
      pet_type = #{record.petType,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.petHospital.model.Record">
    update record
    <set>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
      <if test="patient != null">
        patient = #{patient,jdbcType=VARCHAR},
      </if>
      <if test="petType != null">
        pet_type = #{petType,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.petHospital.model.Record">
    update record
    set time = #{time,jdbcType=DATE},
      patient = #{patient,jdbcType=VARCHAR},
      pet_type = #{petType,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAll" resultMap="BaseResultMap">
  	select * from record
  </select>
</mapper>